<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.biz.rent.dao.RentDao"> <!-- mapper namespace에 DAO 클래스 위치지정 -->
	

	<select id="getSEQ" resultType="Integer">
	SELECT MAX(RENT_SEQ) FROM tbl_rent_book
	</select>

	<select id="selectAll" resultType="rDTO"> <!-- id에 dao에 있는 메소드들 이름 -->
	<!-- 내용에, 들어갈 SQL Query문 -->
	SELECT *
	FROM tbl_rent_book
	WHERE RENT_RETUR_YN IS NULL
	</select>
	
	<select id="getRentCheck" resultType="rDTO">
	SELECT *
	FROM tbl_rent_book
	WHERE RENT_SEQ = #{seq}
	AND RENT_RETUR_YN IS NULL
	</select>
	
	<select id="findByBCode" resultType="rDTO">
	SELECT *
	FROM tbl_rent_book
	WHERE RENT_BCODE = #{bCode}
	</select>
	
	<insert id="insert" parameterType="rDTO">
	INSERT INTO tbl_rent_book(
		RENT_SEQ,
		RENT_DATE,
		RENT_RETURN_DATE,
		RENT_BCODE,
		RENT_UCODE,
		RENT_RETUR_YN,
		RENT_POINT
	)
	VALUES(
		SEQ.NEXTVAL,
		#{rent_date},
		#{rent_return_date},
		#{rent_bcode},
		#{rent_ucode},
		#{rent_retur_yn, jdbcType=VARCHAR},
		#{rent_point, jdbcType=VARCHAR}
	)
	</insert>
	
	<update id="update" parameterType="rDTO">
	UPDATE tbl_rent_book
	SET RENT_SEQ = #{rent_seq},
		RENT_DATE = #{rent_date},
		RENT_RETURN_DATE = #{rent_return_date},
		RENT_BCODE = #{rent_bcode},
		RENT_UCODE = #{rent_ucode},
		RENT_RETUR_YN = #{rent_retur_yn},
		RENT_POINT = #{rent_point}
	WHERE RENT_SEQ = #{rent_seq}
	</update>
	
	<delete id="delete" parameterType="rDTO">
	</delete>
</mapper>